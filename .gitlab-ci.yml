front-build:
  stage: build
  tags:
    - docker
  image: node:14.17.3
  cache:
    key: node_modules
    paths:
      - client-angular/node_modules
  before_script:
    - cd client-angular
    - npm install
  script:
    - npm run build
  except:
    - develop
    - test

front-test:
  stage: test
  tags:
    - docker
  image: node:14.17.3
  cache:
    key: node_modules
    paths:
      - client-angular/node_modules
  before_script:
    - cd client-angular
    - npm install
  script:
    - echo "Test"
  except:
    - develop
    - test
    
deploy:
  stage: deploy
  tags:
    - docker
  image: python:3.9.6
  cache:
    key: eb_installation
    paths:
      - eb/.pyenv/
      - eb/.ebcli-virtual-env/
      - eb/.profile

  before_script:
    - sh eb/use-cache.sh
    - if ! command -v eb > /dev/null; then source /root/.profile && eb --version ; fi
    - sh eb/install-eb.sh
    - if ! command -v eb > /dev/null; then source /root/.profile && eb --version ; fi
    - mkdir ~/.aws/
    - touch ~/.aws/config
  script: 
    - echo $aws_access_key_id
    - echo $aws_secret_access_key
    - echo $testvar
    - echo "[profile eb-cli]" >> ~/.aws/config
    - echo 'aws_access_key_id = $aws_access_key_id' >> ~/.aws/config
    - echo 'aws_secret_access_key = $aws_secret_access_key' >> ~/.aws/config
    - cat ~/.aws/config
    - eb status
  only:
    - develop
    - test
